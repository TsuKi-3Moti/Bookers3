GUI（ジーユーアイ）＝Graphical User Interface（グラフィカルユーザーインターフェース）
	→コンピューターの画面上に表示されるウィンドウやアイコン、ボタン、プルダウンメニューなどを使い、マウスなどのポインティングデバイスで操作するインターフェース

CLI（シーエルアイ）=Command Line Interface(コマンドラインインターフェース)

	Command Line（コマンド ライン）→コンピュータやプログラムにキーボードだけで命令を与える時に操作する画面上の入力行
	Interface（インターフェイス）→2つの異なる機器やシステム、ソフトウェア間で情報のやり取りがなされる際、その間をつなぐ規格や機能

↑CUI＝Character User Interfaceと同じ

	→キーボードを用いて入力を行い、文字によってコンピューターを操作するインターフェース
Windowsでは同様のものを「コマンドプロンプト」
ターミナル
→コマンドと呼ばれる命令文を用いてMacの操作や設定をおこなうためのツール
Windowsでは同様のものを「コマンドプロンプト」


	GUIにおける「フォルダ」→「ディレクトリ（directory）」

カレントディレクトリ（current directory）
	current（カレント）は「現在の」
→現在いるディレクトリ
	カレントディレクトリを確認するコマンド「pwd」

！「今、自分がどこで作業しているか？」を認識するように
間違ったディレクトリで作業を行うと、エラーの発生する原因に

ホームディレクトリ
	→個々の利用者が自由に使えるディレクトリ
	通常、~（チルダ）という記号で表す

Windowsの場合→C:\Users\yamada

	Cloud9の場合→environmentの一つ上の階層のec2-user


階層の一番目/二番目/三番目/……




階層構造（ツリー構造）
→ディレクトリ（フォルダ）の中にさらにディレクトリ（フォルダ）がある状態

CLI…コマンドで階層構造の中を移動したり、ディレクトリを新しく作成したりする


パス
→階層構造において、あるファイルやディレクトリの場所を指すもの

		先頭の一番大きな根っこのディレクトリ
「ルートディレクトリ（root directory）」
			root（ルート）「根」

	ルートディレクトリからの目的パスを表記したもの→絶対パス



カレントディレクトリからの目的パスを表記したもの→相対パス
「../」という表記は現在位置の一つ上の階層
※カレントディレクトリ（現在地）をパス表記する場合には「./」と、ドットは一つ

		目的地の入っているディレクトリまで「../」でさかのぼってから、今度は降りて
/フォルダ５/
/フォルダ５/フォルダｎ/xxx.txt

…的な

CLIのコマンドについて


シェル→ユーザーとコンピュータとの間で伝達を取り次いでくれるプログラム
→OSのバージョンによってデフォルトのシェルの種類が＄（ドルマーク）だったり％（パーセント）だったり
	→ターミナルでの入力を表している※じぶんで入力する必要はない



❓#（シャープ）
→コマンドや実行結果についての説明はつけるべきものなのか。


オプション（option）
	→コマンドの後ろに付けて、実行するコマンドの機能をカスタマイズ
	・「-〇」（ハイフンの後にアルファベット）
	・「--特定の英単語」（ハイフン2つの後に特定の英単語）
※ハイフンが付かないオプションもあり
	★2つ以上のオプションを同時に使用する場合２パターン



引数（ひきすう）→コマンドに渡す値
主にファイル名やディレクトリ名、それらのパスを入力
コマンドによって必要な引数の数が変化

引数が2つ以上必要な場合　間にスペースを空ける



よく使うコマンド

test pwd（print working directory（プリント・ワーキング・ディレクトリ））
→カレントディレクトリのパスを表示

ls（list segments（リスト・セグメンツ））
→「ls」のみで実行…カレントディレクトリの内容を表示
　「ls」＋後ろに引数としてパスを入力で実行…指定したパスにあるディレクトリの内容を表示

cd（change directory（チェンジ・ディレクトリ））
→「cd」のみで実行…ホームディレクトリに移動（移動後pwdコマンドでカレントディレクトリを確認すると良い）
	　「cd」＋後ろに引数としてパスを入力で実行…指定したパスに移動

	rm（remove（リムーブ））→「rm」＋後ろに引数としてファイル名を入力で実行…ファイルを削除
		※このコマンドは引数として、ファイル名が必須

エラー
・指定したファイルやディレクトリが存在しない場合
→「No such file or directory」そのようなファイルやディレクトリは存在しませんの意
→カレントディレクトリが正しいか、スペルミスが無いか等を確認

・rmコマンドとディレクトリ名でディレクトリの削除しようとしている場合
	→「Is a directory」これはディレクトリなので削除できませんの意
		→ディレクトリも対象にする「-r」オプションか、強制的に実行する「-f」オプションを付けると削除可能

・引数なしの「rm」のみで実行した場合
	→「Try 'rm --help' for more information.」オペランド（コマンドの命令対象になるデータのこと）が欠落しています。詳しい情報を確認するには『rm --help』を実行してくださいの意
	→rmはファイル名必須

　rmに限らず別コマンドでもある。
「Try 'コマンド名 --help' for more information.」
入力漏れやスペルミスによってコマンドの使い方を誤っている

	touch
→「touch」＋後ろに引数としてファイル名を入力で実行…指定したファイル名の新規ファイルが作成される
touch caravan/index.html caravan/stile.css 2個行ける
※このコマンドは引数として、ファイル名が必須

	mkdir（make directory（メイク・ディレクトリ））
→「mkdir」＋後ろに引数としてディレクトリ名を入力で実行…指定したディレクトリ名の新規ディレクトリが作成される
		※このコマンドは引数として、ディレクトリ名が必須

	rmdir（remove directory（リムーブ・ディレクトリ））
		→「rmdir」＋後ろに引数としてディレクトリ名を入力で実行…指定したディレクトリを削除
		※このコマンドは引数として、ディレクトリ名が必須
		※ファイルの削除は行えない

cp（copy（コピー））
		→ファイルやディレクトリを、別のディレクトリにコピー
		cp [対象のファイルやディレクトリ] [コピー先のパス]
※このコマンドは引数として、2つの引数が必須

	mv（move（ムーブ））
		★移動先のディレクトリが既に存在している場合
			→ファイルやディレクトリを、別のディレクトリに移動
			mv [現在のファイルやディレクトリ名] [移動先ディレクトリのパス]
			‼このとき、[移動先ディレクトリのパス]の中身は上書き（overwrite）される‼

※このコマンドは引数として、2つの引数が必須

★移動先のディレクトリがまだ存在していない場合↓

→ファイルやディレクトリを、別の名前に変更
mv [現在のファイルやディレクトリ名] [新規のファイルやディレクトリ名]
※このコマンドは引数として、2つの引数が必須


エラー
・mv [現在のディレクトリ名]  [移動先ファイルのパス]
→「cannot overwrite non-directory ' 移動先ファイルのパス'with directory '現在のディレクトリ名'」ディレクトリではない『ファイル』を『ディレクトリ』では上書きできませんの意

	history

→コマンドの実行履歴を表示

	exit
		→CLIを終了する
		Cloud9の場合、自動的にターミナルのウィンドウが閉じる
			→再度、ターミナルを表示する場合、＋のボタンから「New Terminal」をクリック

よく使うオプション

-a / --all
	→隠しファイルも対象にする

-f / --force　＝force（フォース）「力」
		→強制的にコマンドを実行
‼実行しても問題がないことをきちんと確認してから使用すること‼
例えば　rm -rf *　を実行すると、現在のディレクトリの中身が全て問答無用で削除される

--help
		→コマンドの使用方法（マニュアル）を表示

-i　＝information（インフォメーション）「知らせ」
		→確認ステップを追加
このオプションを付けて実行すると、以下のような確認メッセージが表示され、処理が止まる

例.rmの場合「rm: remove regular file ‘○○○○’?」

この状態で
「yes」or「y」を入力し、Enterを押すと削除（処理）
それ以外の文字を入力すると処理がキャンセル


	-r
		→ディレクトリも対象にする


-R　＝recursive（リカーシブ）「再帰的」
		→ディレクトリに対し再帰的に実行する

指定したディレクトリの中にディレクトリがあったら、その中身のディレクトリの中身の中身の……
指定したディレクトリの中の要素（ファイル）をすべて明らかにするもの

	-v / --version
		→バージョンを確認する

覚えておきたい機能
	Tabキーによる入力補完
		ファイル名やディレクトリ名を入力する途中でTabキー
			→候補を自動的に入力
			　候補が複数ある場合、Tabキーを複数回連打

	↑キー／↓キー
		コマンドの実行履歴を1つ上／下に移動します。

特定のroutesのみ表示する
bundle exec rails routes | grep product(userとかadminとか)



