console.log();
丸括弧 () 内に入力された文字をコンソールに出力

Javaと同じように文の最後はセミコロン

◆変数
	・定義
	★let 変数名 = 値;
	let 「これから変数を定義する」という宣言

	・更新　let はいらない！
	★変数名 = 値;
	Javaのデータ型の記述がいらなくなるのと同じ

◆変数の命名規則
	number          英単語
	oddNumber   2語以上はキャメルケース

	✕数字開始　エラー

	△ローマ字、日本語
	望ましくない

◆自己代入
	Java, Rubyと変わらず

	省略形
	Javaと同じ

◆定数
	・定義
	★const 定数名 = 代入する値;
	定数の宣言

	更新しようとすると
	Ruby→警告は出るが更新可能★JavaScript→エラーとなる

◆テンプレートリテラル　Rubyだと変数展開みたいなもの
`${定数or変数}`
※文字列を""でも''でもなく、
バッククォーテーション（`）で囲む！

例　console.log(`こんにちは、${name}さん`);

※Javaにはない！変数の値を文字列に入れるには、文字列結合の演算子(+)を使うか、String.format()メソッドを使う。


条件分岐
◆if文　Javaと同じ形
	If (条件式) {
	　処理;
	}


◆真偽値と比較演算子
	Javaとおなじだが、
	==ではなく===を基本使う


	◇等価演算子
	 ==
	数値「12」と文字列「"12"」は異なるデータですが、同じものとして扱えるように変換が行われる

	const number = 12;
	console.log(number == 12);    → true
	console.log(number == "12"); → true


	◇厳密等価演算子
	a === b   aとbは厳密に等しい
	a !== b    aとbが厳密に異なる

	等価演算子と違い、数値「12」と文字列「"12"」は異なるデータとして扱える
	基本はこちらの厳密演算子を使う

◆else, else if ※elsifじゃないので注意
　Javaと同じ書き方

◆かつまたは 論理演算子
　同じ

◆switch文
default の書き方も含め、Javaと同じ